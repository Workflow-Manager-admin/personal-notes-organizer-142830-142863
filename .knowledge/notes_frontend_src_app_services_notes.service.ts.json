{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesService class providing CRUD operations for managing notes within an Angular application, including persistence to localStorage.", "external_files": ["../models/note.model"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "Date.now"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Angular service class that manages a collection of notes with operations to create, read, update, delete, and search notes, with persistence in localStorage."}], "methods": [{"name": "getNote", "description": "Returns a note with a given id, or undefined if not found."}, {"name": "upsert(note: Note): void { upsert", "description": "Creates a new note or updates an existing note, updating timestamps accordingly.", "scope": "NotesService", "scopeKind": "class"}, {"name": "delete(id: string): void { delete", "description": "Removes a note by id.", "scope": "NotesService", "scopeKind": "class"}, {"name": "search(text: string): Note[] { search", "description": "Searches notes by text in title or content, case-insensitive.", "scope": "NotesService", "scopeKind": "class"}, {"name": "private readFromStorage(): Note[] { readFromStorage", "description": "Reads and parses notes stored in localStorage.", "scope": "NotesService", "scopeKind": "class"}, {"name": "private persist(): void { persist", "description": "Persists current notes to localStorage.", "scope": "NotesService", "scopeKind": "class"}, {"name": "private get storage(): Storage | undefined { storage", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "readonly notes = signal<Note[]>(this.readFromStorage()); this", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.notes()", "this.notes.set()", "this.persist()", "JSON.parse", "JSON.stringify", "localStorage.getItem", "localStorage.setItem", "Date.now"], "search-terms": ["NotesService", "localStorage persistence", "CRUD notes", "Angular service", "note model", "notes array", "search notes"], "state": 2, "file_id": 24, "knowledge_revision": 90, "git_revision": "", "revision_history": [{"51": ""}, {"72": ""}, {"83": ""}, {"90": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^const STORAGE_KEY = 'notes_store';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "all", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const all = this.notes();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.upsert", "scopeKind": "method"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  delete(id: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const idx = all.findIndex((n) => n.id === note.id);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.upsert", "scopeKind": "method"}, {"_type": "tag", "name": "lower", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const lower = text.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.search", "scopeKind": "method"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  readonly notes = signal<Note[]>(this.readFromStorage());$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "persist", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private persist(): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "readFromStorage", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private readFromStorage(): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  search(text: string): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private get storage(): Storage | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  readonly notes = signal<Note[]>(this.readFromStorage());$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "upsert", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  upsert(note: Note): void {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}], "hash": "fd87e8c422c25f0224031f3d409afec1", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "readonly notes = signal<Note[]>(this.readFromStorage());", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}