{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called AuthService that provides client-side authentication management, including login, logout, and session state tracking using a reactive signal. It temporarily stores an auth token in localStorage for session persistence and exposes methods for authentication state checks.", "external_files": ["rxjs", "@angular/core", "@angular/router"], "external_methods": ["localStorage.setItem", "localStorage.removeItem", "localStorage.getItem", "signal"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "An Angular service managing dummy client-side authentication."}], "methods": [{"name": "isLoggedIn(): boolean { isLoggedIn", "description": "Returns true if the user is currently logged in based on reactive signal.", "scope": "AuthService", "scopeKind": "class"}, {"name": "login(email: string, password: string): void { login", "description": "Stores a base64-encoded token in localStorage and marks the user as authenticated; navigates to root.", "scope": "AuthService", "scopeKind": "class"}, {"name": "logout(): void { logout", "description": "Removes the auth token from localStorage, updates authentication status, and redirects to login page.", "scope": "AuthService", "scopeKind": "class"}, {"name": "private get storage(): Storage | undefined { storage", "description": "Accessor for localStorage that returns undefined if running in a server-side environment.", "scope": "AuthService", "scopeKind": "class"}, {"name": "private hasSession(): boolean { hasSession", "description": "Checks whether a session token exists in localStorage.", "scope": "AuthService", "scopeKind": "class"}, {"name": "readonly isAuthenticated = signal<boolean>(this.hasSession()); this", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "calls": ["localStorage.setItem", "localStorage.removeItem", "localStorage.getItem", "this.router.navigateByUrl"], "search-terms": ["Angular AuthService", "client-side authentication", "localStorage token", "reactive authentication signal", "Angular service authentication"], "state": 2, "file_id": 23, "knowledge_revision": 89, "git_revision": "", "revision_history": [{"50": ""}, {"80": ""}, {"82": ""}, {"89": ""}], "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "hasSession", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  private hasSession(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "isAuthenticated", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  readonly isAuthenticated = signal<boolean>(this.hasSession());$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "isLoggedIn", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  isLoggedIn(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  login(email: string, password: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  logout(): void {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  private get storage(): Storage | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  readonly isAuthenticated = signal<boolean>(this.hasSession());$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}], "hash": "3d33460a461aad81a821910220231759", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/auth.service.ts", "fields": [{"name": "readonly isAuthenticated = signal<boolean>(this.hasSession());", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}]}