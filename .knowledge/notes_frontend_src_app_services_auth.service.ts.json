{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called AuthService that provides minimal client-side authentication management. It handles storing an auth token in localStorage, maintains a reactive login state via a signal, and allows login and logout actions with route navigation.", "external_files": ["node_modules/@angular/core", "node_modules/@angular/router"], "external_methods": ["signal", "Router.navigateByUrl"], "published": ["AuthService", "AuthService.isAuthenticated"], "classes": [{"name": "AuthService", "description": "An Angular service that manages user authentication status with a simple token stored in localStorage, providing reactive updates for login state."}], "methods": [{"name": "isLoggedIn(): boolean { isLoggedIn", "description": "Returns true if the user is currently logged in based on the authentication signal.", "scope": "AuthService", "scopeKind": "class"}, {"name": "login(email: string, password: string): void { login", "description": "Dummy login method that stores a base64-encoded token and sets authentication state to true, then navigates to the home page.", "scope": "AuthService", "scopeKind": "class"}, {"name": "logout(): void { logout", "description": "Removes the auth token, sets authentication state to false, and navigates to the login page.", "scope": "AuthService", "scopeKind": "class"}, {"name": "storage (private)", "description": "Accessor that returns the localStorage object if available, otherwise undefined."}, {"name": "hasSession (private)", "description": "Checks if an auth token exists in storage, indicating an active session."}, {"name": "private hasSession(): boolean { hasSession", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}, {"name": "private get storage(): Storage | undefined { storage", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}, {"name": "readonly isAuthenticated = signal<boolean>(this.hasSession()); this", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.storage?.setItem", "this.storage?.removeItem", "this.storage?.getItem", "this.isAuthenticated.set", "this.router.navigateByUrl"], "search-terms": ["AuthService", "client-side authentication", "localStorage token", "signal reactive login state", "dummy login", "navigate routes"], "state": 2, "file_id": 23, "knowledge_revision": 118, "git_revision": "d9545f7a066249fae39975e637a0e2d7d1f56557", "revision_history": [{"50": ""}, {"80": ""}, {"82": ""}, {"89": ""}, {"95": "d9545f7a066249fae39975e637a0e2d7d1f56557"}, {"105": "d9545f7a066249fae39975e637a0e2d7d1f56557"}, {"114": "d9545f7a066249fae39975e637a0e2d7d1f56557"}, {"118": "d9545f7a066249fae39975e637a0e2d7d1f56557"}], "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "hasSession", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  private hasSession(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "isAuthenticated", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  readonly isAuthenticated = signal<boolean>(this.hasSession());$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "isLoggedIn", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  isLoggedIn(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  login(email: string, password: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  logout(): void {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  private get storage(): Storage | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-142830-142863/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  readonly isAuthenticated = signal<boolean>(this.hasSession());$/", "language": "TypeScript", "kind": "method", "scope": "AuthService", "scopeKind": "class"}], "hash": "6926b8b31344e65a7e9f246a36cd22c5", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/auth.service.ts", "fields": [{"name": "readonly isAuthenticated = signal<boolean>(this.hasSession());", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}]}